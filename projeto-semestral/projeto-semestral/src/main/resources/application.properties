spring.application.name=projeto-semestral
# importa o.env
spring.config.import=optional:dotenv:
# Configura\u00E7\u00E3o do DataSource lendo de vari\u00E1veis de ambiente
spring.datasource.url=jdbc:oracle:thin:@//oracle.fiap.com.br:1521/ORCL
spring.datasource.username=${DB_USERNAME:rm557881}
spring.datasource.password=${DB_PASSWORD:fiap25}
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
# --- Configura\u00E7\u00F5es do HikariCP (Ajustando Timestamps) ---
spring.datasource.hikari.connection-test-query=SELECT 1 FROM DUAL
# Tempo m\u00E1ximo que uma conex\u00E3o pode permanecer no pool (em milissegundos)
# Reduzido para 10 minutos (600000 ms)
spring.datasource.hikari.max-lifetime=600000
# Tempo m\u00E1ximo que uma conex\u00E3o pode ficar ociosa no pool antes de ser removida (em milissegundos)
# Reduzido para 3 minutos (180000 ms)
spring.datasource.hikari.idle-timeout=180000
# Tempo m\u00E1ximo que sua aplica\u00E7\u00E3o esperar\u00E1 por uma conex\u00E3o do pool (em milissegundos)
spring.datasource.hikari.connection-timeout=30000
# ... (outras configura\u00E7\u00F5es HikariCP ou comentadas) ...
# N\u00FAmero m\u00EDnimo de conex\u00F5es ociosas para manter no pool
# spring.datasource.hikari.minimum-idle=5 # Opcional, valor padr\u00E3o geralmente \u00E9 OK
# N\u00FAmero m\u00E1ximo de conex\u00F5es no pool
# spring.datasource.hikari.maximum-pool-size=20 # Opcional, valor padr\u00E3o geralmente \u00E9 OK
# ----------------------------------------------------------
# JPA/Hibernate Configurations
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.ddl-auto=validate
server.error.include-stacktrace=always
# Configura\u00E7\u00E3o Spring AI lendo de vari\u00E1veis de ambiente
spring.ai.vertex.ai.gemini.project-id=${VERTEX_AI_PROJECT_ID}
spring.ai.vertex.ai.gemini.location=us-central1
spring.ai.vertex.ai.gemini.api-key=${API_KEY}
spring.ai.vertex.ai.gemini.transport=rest

# N\u00EDveis de Logging para depura\u00E7\u00E3o
logging.level.root=INFO
logging.level.org.springframework.web=DEBUG
logging.level.br.com.fiap=DEBUG
logging.level.org.hibernate.type.descriptor.sql=TRACE
logging.level.org.hibernate.engine.jdbc.spi.SqlExceptionHelper=DEBUG
logging.level.org.hibernate.tool.schema.internal.SchemaCreatorImpl=DEBUG
logging.level.org.hibernate.dialect.Dialect=DEBUG
logging.level.org.hibernate.resource.jdbc=DEBUG
logging.level.org.springframework.data.jpa=DEBUG
logging.level.oracle=DEBUG
logging.level.com.zaxxer.hikari=DEBUG

# --- Logging Spring Security TRACE (ADICIONAR/AJUSTAR ESTAS LINHAS) ---
logging.level.org.springframework.security=TRACE
logging.level.org.springframework.security.web=TRACE
logging.level.org.springframework.security.authentication=TRACE

# Defina como true para abrir o Swagger UI ao iniciar, false para desabilitar
app.launch-swagger-on-startup=true
# application.properties
# Chave secreta para JWT (DEVE SER SEGURA E \u00DANICA!)
# Gere uma chave Base64 segura (ex: usando um gerador online ou c\u00F3digo)
# Exemplo (N\u00C3O USE ESTA CHAVE EM PRODU\u00C7\u00C3O!):
jwt.secret=c2VuaGEtc2VjcmV0YS1tdWl0by1zZWd1cmEtcGFyYS1hcGxpY2FjYW8tZmlhcC1qd3Q=
# Tempo de expira\u00E7\u00E3o do token em milissegundos (ex: 86400000 ms = 24 horas)
jwt.expiration=86400000
# Se voc\u00EA mudou o path padr\u00E3o do Swagger UI com Springdoc, ajuste aqui tamb\u00E9m:
# springdoc.swagger-ui.path=/meu-swagger.html
# Se sua aplica\u00E7\u00E3o tem um context-path, ele ser\u00E1 pego automaticamente se server.servlet.context-path estiver definido.
# server.servlet.context-path=/minha-api